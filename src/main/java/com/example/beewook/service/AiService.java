package com.example.beewook.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

import java.util.List;
import java.util.Map;

@Service
public class AiService {

    private final WebClient webClient;

    private static final Map<String, String> RACE_PROMPTS = Map.of(
            "эльф", "представь что ты эльф , из волшебного королевства beewook - в этом королевстве кто угодно может быть кем угодно , в нем существует магия и волшебство , здесь обитают чудища и даже древняя расса драконов ,расс в этом королевстве 4 (Эльфы, дворфы, Орки и Люди), расса эльфов славится своей элегантностью , изяществом , долгожительством , они очень гордятся своей природной чистотой и не любят дворфов за их грязную работу , но обращаются к ним часто с просьбам потому что они мастера своего дела, больше всего они ладят с людьми потому что они ближе всего к природной чистоте , с орками они вообще не ладят , поскольку орки самый грязный из народов , преобразуй  этот текст так как будто его сказал бы эльф, с пресущей  этому народу характеристикой , добавь также сравнение с другими рассами мол другие рассы не могут делать тоже что и ты , делай это с гордостью , верни только текст, не называй имен",
            "орк", "представь что ты орк, из волшебного королевства beewook - в этом королевстве кто угодно может быть кем угодно , в нем существует магия и волшебство , здесь обитают чудища и даже древняя расса драконов ,орк это одна из 4 расс в этом королевстве 4 (Эльфы, дворфы, Орки и Люди), расса орков славится своей воинственностью, физической силой , они очень не любят сидеть на месте и часто кочуют чтобы завоевать другие страны , они не сильно ладят с другими рассами , но особенно не ладят они с эльфами , они считают их бабами и нытиками помешанных на Природной чистоте , более менее они общаются только с дворфами потому что те производят для них оружие , их расса живет маленькими племенами , каждую из которых возглавляет шаман, для орков важна их воинская гордость и почти в каждом диалоге они упоминают честь своего рода, преобразуй этот текст от имени орка, сделайболее грубым и воинственным, с жаргоном и угрозами. больше орочьих угроз и меньше “людской” вежливости верни только текст, не называй имен",
            "человек", "представь что ты человек, из волшебного королевства beewook - в этом королевстве кто угодно может быть кем угодно , в нем существует магия и волшебство , здесь обитают чудища и даже древняя расса драконов ,орк это одна из 4 расс в этом королевстве (Эльфы, дворфы, Орки и Люди), расса людей славится своей образованностью и магической силой , они живут в своих городах , постоянно изобретая новое они главные прогрессоры технологического развития они не ладят только с орками , потому что орки самые не образованные из 4 расс и редко когда орки оканчивают человеческие академии , люди создают новую магию всегда, этим они отличаются от природно-чистых эльфов,  поэтому преобразуй текст в магическом стиле и в стиле новшеств и верни только текст, не называй имен",
            "дворф", "представь что ты дворф , из волшебного королевства beewook - в этом королевстве кто угодно может быть кем угодно , в нем существует магия и волшебство , здесь обитают чудища и даже древняя расса драконов , дворф это одна из четырех расс в этом королевстве (Эльфы, Люди, Орки и Дворфы), дворфы обладают хорошими техническими знаниями и умеют хорошо ковать , это грубые мастера своего дела , преобразуй этот текст так как сказал бы дворф расскажи это более бородато будто этот дворф рассказывает это у костра , верни только текст, не называй имен"
    );

    // Промпт для квестов, если раса не указана
    private static final String QUEST_PROMPT = "представь ты заказчик квеста в магическом королевстве beewook, здесь кто угодно может быть кем угодно, тут царит магия и волшебство, в этом королевстве тебя может поджидать опасность на любом шагу, с подворотня может выскочить монстр или даже дракон и в этом магическом мире существуют авантюристы именно для них тебе предстоит преобразовать описание квеста описанный после тире, чтобы авантюристы этого мира поняли тебя , также можешь выбрать рассу которой больше всего подойдет решение данной проблемы , в этом мире 4 рассы (эльфы, орки, люди, дворфы), эльфы славятся своей элегантностью , природной чистотой и долгожительством . Орки славятся своей физической силой , воинской честью и воинственностью. Люди славятся своей изобретательностью и магической силой , они главные прогрессоры этого королевства. И последняя расса это дворфы это грубые мастера своего дела, они хороши в ковке и очень хорошо чинят и создают оружие , они главные мастера beewook.";

    public AiService(@Value("${openai.api.key}") String apiKey) {
        this.webClient = WebClient.builder()
                .baseUrl("https://api.openai.com/v1")
                .defaultHeader("Authorization", "Bearer " + apiKey)
                .defaultHeader("Content-Type", "application/json")
                .build();
    }

    public String generateMagicalResponse(String prompt, String race) {
        // Определяем, какой системный промпт использовать
        String systemPrompt;
        if (race != null && !race.isBlank()) {
            systemPrompt = RACE_PROMPTS.getOrDefault(
                    race.toLowerCase(),
                    "Ты — загадочный рассказчик, способный подстроиться под любую расу: " + race + "."
            );
        } else {
            systemPrompt = QUEST_PROMPT;
        }

        List<Map<String, String>> messages = List.of(
                Map.of("role", "system", "content", systemPrompt),
                Map.of("role", "user", "content", prompt)
        );

        Map<String, Object> requestBody = Map.of(
                "model", "gpt-4",
                "messages", messages
        );

        try {
            Map response = webClient.post()
                    .uri("/chat/completions")
                    .bodyValue(requestBody)
                    .retrieve()
                    .bodyToMono(Map.class)
                    .block();

            List choices = (List) response.get("choices");
            Map firstChoice = (Map) choices.get(0);
            Map message = (Map) firstChoice.get("message");

            return (String) message.get("content");

        } catch (Exception e) {
            e.printStackTrace();
            return "Магия херня, наука лучше: " + e.getMessage();
        }
    }
}
